plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.17'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.zerobase'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext{
    set('springCloudVersion','2021.0.1')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.10.2'

    implementation 'org.springframework.boot:spring-boot-starter-mail' // JavaMailSender
    implementation 'org.apache.commons:commons-lang3:3.12.0'  // RandomStringUtils
    implementation 'net.nurigo:sdk:4.2.7' // coolSMS
    implementation fileTree(dir:'libs',includes: ['*.jar'])
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'com.amazonaws:aws-java-sdk-core:1.12.146' // AWS SDK Core 버전을 사용합니다. 버전은 업데이트되어 있을 수 있으므로 최신 버전을 사용하세요.
    implementation 'com.amazonaws:aws-java-sdk-ec2:1.12.146' // EC2 관련 라이브러리

    testImplementation 'junit:junit:4.13.1'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly('io.jsonwebtoken:jjwt-orgjson:0.11.5') {
        exclude(group: 'org.json', module: 'json')
    }
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement{
    imports{
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

//tasks.named('test') {
//    useJUnitPlatform()
//}
